"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[456],{14:(e,t,a)=>{a.d(t,{X:()=>E});var n=a(2115),r=a(2127),i=a(3338);let s={abi:[{inputs:[],name:"GameAlreadyCompleted",type:"error"},{inputs:[],name:"GameNotCompleted",type:"error"},{inputs:[],name:"GameNotFound",type:"error"},{inputs:[],name:"NoGamesPlayed",type:"error"},{inputs:[],name:"UnauthorizedAccess",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"gameId",type:"uint256"},{indexed:!0,internalType:"address",name:"player",type:"address"},{indexed:!1,internalType:"uint64",name:"startTime",type:"uint64"}],name:"GameStarted",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"uint256",name:"gameId",type:"uint256"},{indexed:!0,internalType:"address",name:"player",type:"address"},{indexed:!1,internalType:"uint64",name:"endTime",type:"uint64"}],name:"ScoreSubmitted",type:"event"},{inputs:[],name:"aggregatesInitialized",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"allowGlobalAveragesDecryption",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"gameId",type:"uint256"}],name:"allowScoreDecryption",outputs:[],stateMutability:"view",type:"function"},{inputs:[],name:"averagesComputed",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"cachedAvgMoves",outputs:[{internalType:"euint32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"cachedAvgScore",outputs:[{internalType:"euint32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"gameIdCounter",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"gameSessions",outputs:[{internalType:"address",name:"player",type:"address"},{internalType:"euint32",name:"score",type:"bytes32"},{internalType:"euint32",name:"moves",type:"bytes32"},{internalType:"uint64",name:"startTime",type:"uint64"},{internalType:"uint64",name:"endTime",type:"uint64"},{internalType:"bool",name:"completed",type:"bool"},{internalType:"ebool",name:"reached2048",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"gameId",type:"uint256"}],name:"getGameSession",outputs:[{internalType:"address",name:"player",type:"address"},{internalType:"euint32",name:"score",type:"bytes32"},{internalType:"euint32",name:"moves",type:"bytes32"},{internalType:"uint64",name:"startTime",type:"uint64"},{internalType:"uint64",name:"endTime",type:"uint64"},{internalType:"bool",name:"completed",type:"bool"},{internalType:"ebool",name:"won",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"getGlobalAverages",outputs:[{internalType:"euint32",name:"avgScore",type:"bytes32"},{internalType:"euint32",name:"avgMoves",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"player",type:"address"}],name:"getPlayerGameCount",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"player",type:"address"}],name:"getPlayerGameIds",outputs:[{internalType:"uint256[]",name:"",type:"uint256[]"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"player",type:"address"}],name:"getPlayerStats",outputs:[{internalType:"uint256[]",name:"gameIds",type:"uint256[]"},{internalType:"uint32",name:"gamesPlayed",type:"uint32"},{internalType:"euint32",name:"bestScore",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"start",type:"uint256"},{internalType:"uint256",name:"count",type:"uint256"}],name:"getPlayers",outputs:[{internalType:"address[]",name:"playerAddresses",type:"address[]"}],stateMutability:"view",type:"function"},{inputs:[],name:"getPlayersCount",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"playerBestScore",outputs:[{internalType:"euint32",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"playerGameCount",outputs:[{internalType:"uint32",name:"",type:"uint32"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"},{internalType:"uint256",name:"",type:"uint256"}],name:"playerGames",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"",type:"address"}],name:"playerHasBestScore",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"",type:"uint256"}],name:"players",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"protocolId",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"pure",type:"function"},{inputs:[],name:"refreshGlobalAverages",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"startGame",outputs:[{internalType:"uint256",name:"gameId",type:"uint256"}],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"gameId",type:"uint256"},{internalType:"externalEuint32",name:"encryptedScore",type:"bytes32"},{internalType:"bytes",name:"inputProofScore",type:"bytes"},{internalType:"externalEuint32",name:"encryptedMoves",type:"bytes32"},{internalType:"bytes",name:"inputProofMoves",type:"bytes"}],name:"submitScore",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"totalEncryptedMoves",outputs:[{internalType:"euint64",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalEncryptedScores",outputs:[{internalType:"euint64",name:"",type:"bytes32"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalGames",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalPlayers",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"}]},o={0xaa36a7:{address:"0x9c03fAe8A23038731Aef83F7342F16811673a1cd",chainId:0xaa36a7,chainName:"sepolia"},31337:{address:"0x1546dbaA8C01cf6CE34683737047e33E00a557F0",chainId:31337,chainName:"hardhat"}};var l=a(7325),u=a(5777),p=a(5378),y=a(4827),c=a(2507);function d(){return Math.floor(Date.now()/1e3)}var m=new WeakMap,g=new WeakMap,b=new WeakMap,v=new WeakMap;class h{get contractAddresses(){return(0,l._)(this,m)}get userAddress(){return(0,l._)(this,g)}get publicKey(){return(0,l._)(this,b)}get key(){return(0,l._)(this,v)}constructor(e,t,a,n){if((0,u._)(this,m,{writable:!0,value:void 0}),(0,u._)(this,g,{writable:!0,value:void 0}),(0,u._)(this,b,{writable:!0,value:void 0}),(0,u._)(this,v,{writable:!0,value:void 0}),!y.PW(a))throw TypeError("Invalid address ".concat(a));let i=t.sort(),s=e.createEIP712(null!=n?n:r.j,i,0,0);try{let e=c.z.hash(s.domain,{UserDecryptRequestVerification:s.types.UserDecryptRequestVerification},s.message);(0,p._)(this,m,i),(0,p._)(this,g,a),(0,p._)(this,v,"".concat(a,":").concat(e))}catch(e){throw console.log(e),e}}}var w=new WeakMap,f=new WeakMap,T=new WeakMap,S=new WeakMap,_=new WeakMap,M=new WeakMap,A=new WeakMap,C=new WeakMap;class k{get privateKey(){return(0,l._)(this,f)}get publicKey(){return(0,l._)(this,w)}get signature(){return(0,l._)(this,T)}get contractAddresses(){return(0,l._)(this,A)}get startTimestamp(){return(0,l._)(this,S)}get durationDays(){return(0,l._)(this,_)}get userAddress(){return(0,l._)(this,M)}static checkIs(e){if(!e||"object"!=typeof e||!("publicKey"in e&&"string"==typeof e.publicKey)||!("privateKey"in e&&"string"==typeof e.privateKey)||!("signature"in e&&"string"==typeof e.signature)||!("startTimestamp"in e&&"number"==typeof e.startTimestamp)||!("durationDays"in e&&"number"==typeof e.durationDays)||!("contractAddresses"in e&&Array.isArray(e.contractAddresses)))return!1;for(let t=0;t<e.contractAddresses.length;++t)if("string"!=typeof e.contractAddresses[t]||!e.contractAddresses[t].startsWith("0x"))return!1;return!!("userAddress"in e&&"string"==typeof e.userAddress&&e.userAddress.startsWith("0x"))&&!!("eip712"in e&&"object"==typeof e.eip712&&null!==e.eip712)&&!!("domain"in e.eip712&&"object"==typeof e.eip712.domain)&&!!("primaryType"in e.eip712&&"string"==typeof e.eip712.primaryType)&&"message"in e.eip712&&!!("types"in e.eip712&&"object"==typeof e.eip712.types&&null!==e.eip712.types)}toJSON(){return{publicKey:(0,l._)(this,w),privateKey:(0,l._)(this,f),signature:(0,l._)(this,T),startTimestamp:(0,l._)(this,S),durationDays:(0,l._)(this,_),userAddress:(0,l._)(this,M),contractAddresses:(0,l._)(this,A),eip712:(0,l._)(this,C)}}static fromJSON(e){return new k("string"==typeof e?JSON.parse(e):e)}equals(e){return e.signature===(0,l._)(this,T)}isValid(){return d()<(0,l._)(this,S)+24*(0,l._)(this,_)*3600}async saveToGenericStringStorage(e,t,a){try{let n=JSON.stringify(this),r=new h(t,(0,l._)(this,A),(0,l._)(this,M),a?(0,l._)(this,w):void 0);await e.setItem(r.key,n),console.log("signature saved! contracts=".concat((0,l._)(this,A).length))}catch(e){console.error("FhevmDecryptionSignature.saveToGenericStringStorage() failed!")}}static async loadFromGenericStringStorage(e,t,a,n,r){try{let i=new h(t,a,n,r),s=await e.getItem(i.key);if(!s)return console.warn("Could not load signature! key=".concat(i.key)),null;try{let e=k.fromJSON(s);if(!e.isValid())return null;return e}catch(e){return null}}catch(e){return console.error("FhevmDecryptionSignature.loadFromGenericStringStorage() failed!"),null}}static async new(e,t,a,n,r){try{let i=await r.getAddress(),s=d(),o=e.createEIP712(a,t,s,365),l=await r.signTypedData(o.domain,{UserDecryptRequestVerification:o.types.UserDecryptRequestVerification},o.message);return new k({publicKey:a,privateKey:n,contractAddresses:t,startTimestamp:s,durationDays:365,signature:l,eip712:o,userAddress:i})}catch(e){return null}}static async loadOrSign(e,t,a,n,r){let i=await a.getAddress(),s=await k.loadFromGenericStringStorage(n,e,t,i,null==r?void 0:r.publicKey);if(s)return s;let{publicKey:o,privateKey:l}=null!=r?r:e.generateKeypair(),u=await k.new(e,t,o,l,a);return u?(await u.saveToGenericStringStorage(n,e,!!(null==r?void 0:r.publicKey)),u):null}constructor(e){if((0,u._)(this,w,{writable:!0,value:void 0}),(0,u._)(this,f,{writable:!0,value:void 0}),(0,u._)(this,T,{writable:!0,value:void 0}),(0,u._)(this,S,{writable:!0,value:void 0}),(0,u._)(this,_,{writable:!0,value:void 0}),(0,u._)(this,M,{writable:!0,value:void 0}),(0,u._)(this,A,{writable:!0,value:void 0}),(0,u._)(this,C,{writable:!0,value:void 0}),!k.checkIs(e))throw TypeError("Invalid FhevmDecryptionSignatureType");(0,p._)(this,w,e.publicKey),(0,p._)(this,f,e.privateKey),(0,p._)(this,T,e.signature),(0,p._)(this,S,e.startTimestamp),(0,p._)(this,_,e.durationDays),(0,p._)(this,M,e.userAddress),(0,p._)(this,A,e.contractAddresses),(0,p._)(this,C,e.eip712)}}var G=new WeakMap;class I{getItem(e){return(0,l._)(this,G).getItem(e)}setItem(e,t){(0,l._)(this,G).setItem(e,t)}removeItem(e){(0,l._)(this,G).removeItem(e)}constructor(e){(0,u._)(this,G,{writable:!0,value:void 0}),(0,p._)(this,G,e)}}function E(e){let{instance:t,signer:a,chainId:l}=e,[u,p]=(0,n.useState)(!1),[y,c]=(0,n.useState)(null),[d,m]=(0,n.useState)(null),[g,b]=(0,n.useState)();(0,n.useEffect)(()=>{var e;if(!l)return;let t=null==(e=o[l.toString()])?void 0:e.address;t&&t!==r.j?b(t):b(void 0)},[l]);let v=(0,n.useCallback)(()=>a&&g?new i.NZ(g,s.abi,a):null,[a,g]),h=(0,n.useCallback)(async()=>{let e=v();if(!e)return c("Wallet not connected or contract not deployed"),null;try{p(!0),c(null);let t=await e.startGame();await t.wait();let a=Number(await e.gameIdCounter())-1;return m(a),console.log("Game started with ID: ".concat(a)),a}catch(e){return c(e instanceof Error?e.message:"Failed to start game"),console.error("Start game error:",e),null}finally{p(!1)}},[v]),w=(0,n.useCallback)(async(e,n,r)=>{let i=v();if(!t||!i||!a)return c("Not ready to submit score"),!1;try{p(!0),c(null);let s=await a.getAddress(),o=t.createEncryptedInput(g,s);o.add32(n);let l=await o.encrypt(),u=t.createEncryptedInput(g,s);u.add32(r);let y=await u.encrypt();console.log("Submitting encrypted score and moves...",{score:n,moves:r});let d=await i.submitScore(e,l.handles[0],l.inputProof,y.handles[0],y.inputProof);return await d.wait(),console.log("Score and moves submitted successfully for game ".concat(e)),!0}catch(e){return c(e instanceof Error?e.message:"Failed to submit score"),console.error("Submit score error:",e),!1}finally{p(!1)}},[t,v,a,g]),f=(0,n.useCallback)(async e=>{let t=v();if(!t)return c("Contract not available"),null;try{p(!0),c(null);let a=await t.getPlayerStats(e);return{gameIds:a[0],gamesPlayed:Number(a[1]),bestScore:a[2]}}catch(e){return c(e instanceof Error?e.message:"Failed to get player stats"),console.error("Get player stats error:",e),null}finally{p(!1)}},[v]),T=(0,n.useCallback)(async()=>{let e=v();if(!e)return c("Contract not available"),null;try{let t=await e.totalGames(),a=await e.totalPlayers();return{totalGames:Number(t),totalPlayers:Number(a)}}catch(e){return c(e instanceof Error?e.message:"Failed to get total stats"),console.error("Get total stats error:",e),null}},[v]),S=(0,n.useCallback)(async e=>{if(!t||!a||!g)return c("FHEVM instance, signer, or contract not available"),null;try{p(!0),c(null);let n=new I(window.localStorage),r=await k.loadOrSign(t,[g],a,n);if(!r)return c("Unable to build FHEVM decryption signature"),null;let i=e.toString();console.log("Decrypting value...",{handle:i,contractAddress:g});let s=(await t.userDecrypt([{handle:i,contractAddress:g}],r.privateKey,r.publicKey,r.signature,r.contractAddresses,r.userAddress,r.startTimestamp,r.durationDays))[i];return console.log("Decrypted value:",s),Number(s)}catch(e){return c(e instanceof Error?e.message:"Failed to decrypt value"),console.error("Decryption error:",e),null}finally{p(!1)}},[t,a,g]),_=(0,n.useCallback)(async()=>{let e=v();if(!t||!e||!a)return c("Not ready to get global averages"),null;try{p(!0),c(null),console.log("\uD83D\uDD04 Step 1/4: Refreshing global averages...");let t=await e.refreshGlobalAverages();await t.wait(),console.log("✅ Step 2/4: Granting decryption permission...");let a=await e.allowGlobalAveragesDecryption();await a.wait(),console.log("\uD83D\uDCE6 Step 3/4: Fetching encrypted averages...");let n=await e.getGlobalAverages();console.log("Received encrypted averages:",{avgScore:n[0].toString(),avgMoves:n[1].toString()});let r=n[0],i=n[1];console.log("\uD83D\uDD13 Step 4/4: Decrypting values...");let s=await S(r),o=await S(i);if(null===s||null===o)throw Error("Failed to decrypt one or more values");return console.log("✅ Global averages ready:",{avgScore:s,avgMoves:o}),{avgScore:s,avgMoves:o}}catch(e){return c(e instanceof Error?e.message:"Failed to get global averages"),console.error("❌ Get global averages error:",e),null}finally{p(!1)}},[t,v,a,S]),M=(0,n.useCallback)(async e=>{let t=v();if(!t)return c("Contract not available"),null;try{let a=await t.getGameSession(e);return{player:a[0],score:a[1],moves:a[2],startTime:Number(a[3]),endTime:Number(a[4]),completed:a[5],won:a[6]}}catch(e){return c(e instanceof Error?e.message:"Failed to get game session"),console.error("Get game session error:",e),null}},[v]);return{startGame:h,submitScore:w,getPlayerStats:f,getTotalStats:T,getGlobalAverages:_,getGameSession:M,getPlayers:(0,n.useCallback)(async(e,t)=>{let a=v();if(!a)return c("Contract not available"),null;try{return await a.getPlayers(e,t)}catch(e){return c(e instanceof Error?e.message:"Failed to get players"),console.error("Get players error:",e),null}},[v]),getPlayersCount:(0,n.useCallback)(async()=>{let e=v();if(!e)return c("Contract not available"),0;try{let t=await e.getPlayersCount();return Number(t)}catch(e){return c(e instanceof Error?e.message:"Failed to get players count"),console.error("Get players count error:",e),0}},[v]),decryptValue:S,loading:u,error:y,currentGameId:d,contractAddress:g,isReady:!!g&&!!a&&!!t,isWalletConnected:!!a&&!!g}}},8839:(e,t,a)=>{a.d(t,{AppProviders:()=>l,U:()=>o});var n=a(5155),r=a(2115),i=a(1012);let s=(0,r.createContext)({signer:void 0,provider:void 0,address:void 0,chainId:void 0,instance:void 0});function o(){return(0,r.useContext)(s)}function l(e){let{children:t}=e,[o,l]=(0,r.useState)(),[u,p]=(0,r.useState)(),[y,c]=(0,r.useState)(),[d,m]=(0,r.useState)(),[g,b]=(0,r.useState)();return(0,r.useEffect)(()=>{if(window.ethereum){let e=new i.k(window.ethereum);l(e),window.ethereum.on("accountsChanged",async t=>{t.length>0?(p(await e.getSigner()),c(t[0])):(p(void 0),c(void 0))}),window.ethereum.on("chainChanged",e=>{m(parseInt(e,16)),window.location.reload()}),window.ethereum.request({method:"eth_accounts"}).then(async t=>{t.length>0&&(p(await e.getSigner()),c(t[0]),m(Number((await e.getNetwork()).chainId)))}).catch(console.error)}},[]),(0,r.useEffect)(()=>{(async()=>{if(!d||!window.ethereum)return b(void 0);try{console.log("\uD83D\uDD27 Initializing FHEVM instance for chainId:",d);let{createFhevmInstance:e}=await a.e(812).then(a.bind(a,7812)),t=new AbortController,n=await e({provider:window.ethereum,mockChains:{31337:"http://localhost:8545",1337:"http://localhost:8545"},signal:t.signal,onStatusChange:e=>{console.log("FHEVM status:",e)}});b(n),console.log("✅ FHEVM instance initialized successfully")}catch(e){console.error("Failed to initialize FHEVM instance:",e),b(void 0)}})()},[d]),(0,n.jsx)(s.Provider,{value:{provider:o,signer:u,address:y,chainId:d,instance:g},children:t})}}}]);